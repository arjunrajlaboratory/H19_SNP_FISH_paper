byCellCounts <- dataTable %>% xtabs( ~  cellID + labels, data = .) %>% as.data.frame() %>% spread(labels, Freq)
##Plotting.....
#Plot first 50 cells that have at least 50 detected RNAs
cellCounts_forPlot_Wide <- byCellCounts %>% filter(B6 + C7 >= 50) %>% mutate(plot_idx = seq(1,n()))
cellCounts_forPlot_Long <- cellCounts_forPlot_Wide %>% gather(labels, rnaCount, -cellID, -plot_idx)
#Color Values
colorVec <- c("B6" ="deepskyblue1", "C7" = "orange", "undetec" = "grey", "3-color" = "brown")
C7Counts <- cellCounts_forPlot_Long %>% filter(labels == "C7")
B6Counts <- cellCounts_forPlot_Long %>% filter(labels == "B6")
#All CELLS
AllcellCounts_forPlot <- byCellCounts %>% mutate(plot_idx = seq(1,n())) %>% gather(labels, rnaCount, -cellID, -plot_idx)
AllC7Counts <- AllcellCounts_forPlot %>% filter(labels == "C7")
AllB6Counts <- AllcellCounts_forPlot %>% filter(labels == "B6")
## Plot Pie Graph
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
overallPieChart <- ggplot(data = totals) +
geom_bar(aes(x="", y = totalFrac, fill = labels), stat = "identity", width = 1) +
coord_polar(theta="y") + blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(x = 1.8,  y = totalFrac/3 + c(0,cumsum(totalFrac[-length(totalFrac)])),
label = percent(totalFrac)), size=5) +
scale_fill_manual(values = colorVec) +
ggtitle(expData$name)
plot(overallPieChart)
currdir <- getwd()
setwd(outSelectdir)
ggsave(plot = overallPieChart, filename =   paste(graphName, "_PIXELSHIFT_OverallPie.pdf", sep = "_"))
setwd(currdir)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)
library(yaml)
library(reshape2)
source('SET_ABSOLUTE_PATH.R')
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <-  "Data_CxB_MEF_9CG_IGF2"
pixelShift <- F
outSelectdir <- file.path(PROJHOME, 'Plots/Supp Figure 4/')
outdir <- file.path(PROJHOME, 'Plots/Supp Figure 4/')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNPs"="B6", "C7 H19 SNPs"="C7",
"H19 B6" = "B6", "H19 CAST" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
byCellCounts <- dataTable %>% group_by(cellID, labels) %>% summarize(rnaCount = n(), numGFP = unique(numGFP)) %>%
mutate(IGF2 = ifelse(numGFP > 100, T, F))
totals <- byCellCounts %>% group_by(labels) %>% summarize(totalCount = sum(rnaCount))
totals$name <- as.factor(dataSelect)
totals <- totals %>% mutate(totalFrac = totalCount/sum(totalCount))
byCellCounts_wide <- dataTable %>% xtabs( ~  cellID + labels, data = .) %>% as.data.frame() %>% spread(labels, Freq)
toJoin <- byCellCounts %>% group_by(cellID) %>% summarise(IGF2 = unique(IGF2))
byCellCounts_wide$cellID <- as.numeric(byCellCounts_wide$cellID)
byCellCounts_wide <- left_join(byCellCounts_wide, toJoin)
##Plotting.....
minDetec <- 15
monoFrac <- 0.8
cellCounts_forPlot_Wide <- byCellCounts_wide %>% filter(B6 + C7 > minDetec) %>% mutate(plot_idx = seq(1,n())) %>%
mutate(mono = (C7/(C7+B6))) %>% mutate(isMono =  mono >= monoFrac) %>% arrange(isMono, (B6+C7)) %>% mutate(plot_idx = seq(1,n()))
IGF2Pos <- cellCounts_forPlot_Wide$plot_idx[cellCounts_forPlot_Wide$IGF2]
C7IGF2Pos <- cellCounts_forPlot_Wide$C7[cellCounts_forPlot_Wide$IGF2]
upDownBar2 <- ggplot() +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= -C7, fill = "C7"), stat = "identity",
position = "identity") +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= B6, fill = "B6"), stat = "identity",
position = "identity") +
geom_point(aes(x = IGF2Pos, y=  -C7IGF2Pos  -25), label = "*", colour = 'green') +
coord_flip() +
xlab("Individual Cells") +
ylab("RNA Count") +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("B6" ="deepskyblue1", "C7" = "orange")) +
ggtitle(expData$name)
plot(upDownBar2)
currdir <- getwd()
setwd(outdir)
ggsave(plot = upDownBar2,  width = 9.89, height = 9,   filename =  paste("9CG_IGF2_BAR.pdf", sep = "_"))
setwd(currdir)
numGFP <- dataTable %>% group_by(cellID) %>% summarise(numGFP = unique(numGFP))
cellCounts_forPlot_Wide<- left_join(cellCounts_forPlot_Wide, numGFP)
ScatterRatio <- ggplot() +
geom_point(data = cellCounts_forPlot_Wide, aes(x = mono, y = numGFP, size = 3)) +
geom_line(aes(x = 0.8, y =seq(0,3500,100), colour = 'red'))+
xlab("C7 Ratio") +
ylab("Detected IGF2 RNA Count") +
xlim(0,1) +
ylim(0,700) +
theme_bw(base_size = 20, base_family = "Helvetica") +
ggtitle(expData$name)
plot(ScatterRatio)
currdir <- getwd()
setwd(outdir)
ggsave(plot = ScatterRatio,  width = 9.89, height = 9,   filename =  paste("9CG_IGF2_Scatter.pdf", sep = "_"))
setwd(currdir)
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <-  "Data_CxB_MEF_WT_IGF2"
pixelShift <- F
outSelectdir <- file.path(PROJHOME, 'Plots/Supp Figure 4/')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNPs"="B6", "C7 H19 SNPs"="C7",
"H19 B6" = "B6", "H19 CAST" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
byCellCounts <- dataTable %>% group_by(cellID, labels) %>% summarize(rnaCount = n(), numGFP = unique(numGFP)) %>%
mutate(IGF2 = ifelse(numGFP > 100, T, F))
totals <- byCellCounts %>% group_by(labels) %>% summarize(totalCount = sum(rnaCount))
totals$name <- as.factor(dataSelect)
totals <- totals %>% mutate(totalFrac = totalCount/sum(totalCount))
byCellCounts_wide <- dataTable %>% xtabs( ~  cellID + labels, data = .) %>% as.data.frame() %>% spread(labels, Freq)
toJoin <- byCellCounts %>% group_by(cellID) %>% summarise(IGF2 = unique(IGF2))
byCellCounts_wide$cellID <- as.numeric(byCellCounts_wide$cellID)
byCellCounts_wide <- left_join(byCellCounts_wide, toJoin)
##Plotting.....
minDetec <- 15
monoFrac <- 0.8
cellCounts_forPlot_Wide <- byCellCounts_wide %>% filter(B6 + C7 > minDetec) %>% mutate(plot_idx = seq(1,n())) %>%
mutate(mono = (C7/(C7+B6))) %>% mutate(isMono =  mono >= monoFrac) %>% arrange(isMono, (B6+C7)) %>% mutate(plot_idx = seq(1,n()))
IGF2Pos <- cellCounts_forPlot_Wide$plot_idx[cellCounts_forPlot_Wide$IGF2]
C7IGF2Pos <- cellCounts_forPlot_Wide$C7[cellCounts_forPlot_Wide$IGF2]
upDownBar2 <- ggplot() +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= -C7, fill = "C7"), stat = "identity",
position = "identity") +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= B6, fill = "B6"), stat = "identity",
position = "identity") +
geom_point(aes(x = IGF2Pos, y=  -C7IGF2Pos  -25), label = "*", colour = 'green') +
coord_flip() +
xlab("Individual Cells") +
ylab("RNA Count") +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("B6" ="deepskyblue1", "C7" = "orange")) +
ggtitle(expData$name)
plot(upDownBar2)
currdir <- getwd()
setwd(outdir)
ggsave(plot = upDownBar2,  width = 9.89, height = 9,   filename =  paste("WT_IGF2_Bar.pdf", sep = "_"))
setwd(currdir)
numGFP <- dataTable %>% group_by(cellID) %>% summarise(numGFP = unique(numGFP))
cellCounts_forPlot_Wide<- left_join(cellCounts_forPlot_Wide, numGFP)
ScatterRatio <- ggplot() +
geom_point(data = cellCounts_forPlot_Wide, aes(x = mono, y = numGFP, size = 3)) +
geom_line(aes(x = 0.8, y =seq(0,3500,100), colour = 'red') )+
xlab("C7 Ratio") +
ylab("Detected IGF2 RNA Count") +
xlim(0,1) +
ylim(0,3000) +
theme_bw(base_size = 20, base_family = "Helvetica") +
ggtitle(expData$name)
plot(ScatterRatio)
currdir <- getwd()
setwd(outdir)
ggsave(plot = ScatterRatio,  width = 9.89, height = 9,   filename =  paste("WT_IGF2_Scatter.pdf", sep = "_"))
setwd(currdir)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)
library(yaml)
library(reshape2)
source('SET_ABSOLUTE_PATH.R')
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <-  "Data_CxB_MEF_9CG_IGF2"
pixelShift <- F
outSelectdir <- file.path(PROJHOME, 'Plots/Supp Figure 4/')
outdir <- file.path(PROJHOME, 'Plots/Supp Figure 4/')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNPs"="B6", "C7 H19 SNPs"="C7",
"H19 B6" = "B6", "H19 CAST" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
byCellCounts <- dataTable %>% group_by(cellID, labels) %>% summarize(rnaCount = n(), numGFP = unique(numGFP)) %>%
mutate(IGF2 = ifelse(numGFP > 100, T, F))
totals <- byCellCounts %>% group_by(labels) %>% summarize(totalCount = sum(rnaCount))
totals$name <- as.factor(dataSelect)
totals <- totals %>% mutate(totalFrac = totalCount/sum(totalCount))
byCellCounts_wide <- dataTable %>% xtabs( ~  cellID + labels, data = .) %>% as.data.frame() %>% spread(labels, Freq)
toJoin <- byCellCounts %>% group_by(cellID) %>% summarise(IGF2 = unique(IGF2))
byCellCounts_wide$cellID <- as.numeric(byCellCounts_wide$cellID)
byCellCounts_wide <- left_join(byCellCounts_wide, toJoin)
##Plotting.....
minDetec <- 15
monoFrac <- 0.8
cellCounts_forPlot_Wide <- byCellCounts_wide %>% filter(B6 + C7 > minDetec) %>% mutate(plot_idx = seq(1,n())) %>%
mutate(mono = (C7/(C7+B6))) %>% mutate(isMono =  mono >= monoFrac) %>% arrange(isMono, (B6+C7)) %>% mutate(plot_idx = seq(1,n()))
IGF2Pos <- cellCounts_forPlot_Wide$plot_idx[cellCounts_forPlot_Wide$IGF2]
C7IGF2Pos <- cellCounts_forPlot_Wide$C7[cellCounts_forPlot_Wide$IGF2]
upDownBar2 <- ggplot() +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= -C7, fill = "C7"), stat = "identity",
position = "identity") +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= B6, fill = "B6"), stat = "identity",
position = "identity") +
geom_point(aes(x = IGF2Pos, y=  -C7IGF2Pos  -25), colour = 'green') +
coord_flip() +
xlab("Individual Cells") +
ylab("RNA Count") +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("B6" ="deepskyblue1", "C7" = "orange")) +
ggtitle(expData$name)
plot(upDownBar2)
currdir <- getwd()
setwd(outdir)
ggsave(plot = upDownBar2,  width = 9.89, height = 9,   filename =  paste("9CG_IGF2_BAR.pdf", sep = "_"))
setwd(currdir)
numGFP <- dataTable %>% group_by(cellID) %>% summarise(numGFP = unique(numGFP))
cellCounts_forPlot_Wide<- left_join(cellCounts_forPlot_Wide, numGFP)
ScatterRatio <- ggplot() +
geom_point(data = cellCounts_forPlot_Wide, aes(x = mono, y = numGFP, size = 3)) +
geom_line(aes(x = 0.8, y =seq(0,3500,100), colour = 'red'))+
xlab("C7 Ratio") +
ylab("Detected IGF2 RNA Count") +
xlim(0,1) +
ylim(0,700) +
theme_bw(base_size = 20, base_family = "Helvetica") +
ggtitle(expData$name)
plot(ScatterRatio)
currdir <- getwd()
setwd(outdir)
ggsave(plot = ScatterRatio,  width = 9.89, height = 9,   filename =  paste("9CG_IGF2_Scatter.pdf", sep = "_"))
setwd(currdir)
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <-  "Data_CxB_MEF_WT_IGF2"
pixelShift <- F
outSelectdir <- file.path(PROJHOME, 'Plots/Supp Figure 4/')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNPs"="B6", "C7 H19 SNPs"="C7",
"H19 B6" = "B6", "H19 CAST" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
byCellCounts <- dataTable %>% group_by(cellID, labels) %>% summarize(rnaCount = n(), numGFP = unique(numGFP)) %>%
mutate(IGF2 = ifelse(numGFP > 100, T, F))
totals <- byCellCounts %>% group_by(labels) %>% summarize(totalCount = sum(rnaCount))
totals$name <- as.factor(dataSelect)
totals <- totals %>% mutate(totalFrac = totalCount/sum(totalCount))
byCellCounts_wide <- dataTable %>% xtabs( ~  cellID + labels, data = .) %>% as.data.frame() %>% spread(labels, Freq)
toJoin <- byCellCounts %>% group_by(cellID) %>% summarise(IGF2 = unique(IGF2))
byCellCounts_wide$cellID <- as.numeric(byCellCounts_wide$cellID)
byCellCounts_wide <- left_join(byCellCounts_wide, toJoin)
##Plotting.....
minDetec <- 15
monoFrac <- 0.8
cellCounts_forPlot_Wide <- byCellCounts_wide %>% filter(B6 + C7 > minDetec) %>% mutate(plot_idx = seq(1,n())) %>%
mutate(mono = (C7/(C7+B6))) %>% mutate(isMono =  mono >= monoFrac) %>% arrange(isMono, (B6+C7)) %>% mutate(plot_idx = seq(1,n()))
IGF2Pos <- cellCounts_forPlot_Wide$plot_idx[cellCounts_forPlot_Wide$IGF2]
C7IGF2Pos <- cellCounts_forPlot_Wide$C7[cellCounts_forPlot_Wide$IGF2]
upDownBar2 <- ggplot() +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= -C7, fill = "C7"), stat = "identity",
position = "identity") +
geom_bar(data = cellCounts_forPlot_Wide, aes(x = plot_idx, y= B6, fill = "B6"), stat = "identity",
position = "identity") +
geom_point(aes(x = IGF2Pos, y=  -C7IGF2Pos  -25), colour = 'green') +
coord_flip() +
xlab("Individual Cells") +
ylab("RNA Count") +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("B6" ="deepskyblue1", "C7" = "orange")) +
ggtitle(expData$name)
plot(upDownBar2)
currdir <- getwd()
setwd(outdir)
ggsave(plot = upDownBar2,  width = 9.89, height = 9,   filename =  paste("WT_IGF2_Bar.pdf", sep = "_"))
setwd(currdir)
numGFP <- dataTable %>% group_by(cellID) %>% summarise(numGFP = unique(numGFP))
cellCounts_forPlot_Wide<- left_join(cellCounts_forPlot_Wide, numGFP)
ScatterRatio <- ggplot() +
geom_point(data = cellCounts_forPlot_Wide, aes(x = mono, y = numGFP, size = 3)) +
geom_line(aes(x = 0.8, y =seq(0,3500,100), colour = 'red') )+
xlab("C7 Ratio") +
ylab("Detected IGF2 RNA Count") +
xlim(0,1) +
ylim(0,3000) +
theme_bw(base_size = 20, base_family = "Helvetica") +
ggtitle(expData$name)
plot(ScatterRatio)
currdir <- getwd()
setwd(outdir)
ggsave(plot = ScatterRatio,  width = 9.89, height = 9,   filename =  paste("WT_IGF2_Scatter.pdf", sep = "_"))
setwd(currdir)
library(ggplot2)
library(plyr)
library(dplyr)
source('SET_ABSOLUTE_PATH.R')
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <- "Data_CxB_9CG_MEFinCRL"
pixelShift <- F
outSelectdir <- file.path(PROJHOME, 'Plots/Supp Figure 5/')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
cellArrayObj <- tbl_df(read.csv(paste(datadir, "ExtractedCSVs/", expData$name, '_CellArrayObj.csv', sep = ""), stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNP"="B6", "C7 H19 SNP"="C7",
"H19 B6 SNP" = "B6", "H19 CAST SNP" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
byCellCounts <- dataTable %>% group_by(cellID, labels) %>% summarize(rnaCount = n())
totals <- byCellCounts %>% group_by(labels) %>% summarize(totalCount = sum(rnaCount))
totals$name <- as.factor(dataSelect)
totals <- totals %>% mutate(totalFrac = totalCount/sum(totalCount))
byCellCounts_wide <- dataTable %>% xtabs( ~  cellID + labels, data = .) %>% as.data.frame() %>% spread(labels, Freq)
byCellCounts_wide$cellID <- as.numeric(byCellCounts_wide$cellID)
grouped_Positions <- c(8,10,13,16)
clusterID <- 1;
cellArrayObj$clusterID = 1;
for (i in seq(2,nrow(cellArrayObj))){
if ((cellArrayObj$ArrayNum[i-1] == cellArrayObj$ArrayNum[i]) || (cellArrayObj$ArrayNum[i] %in% grouped_Positions)) {
cellArrayObj$clusterID[i] <- clusterID
}
else{
clusterID <- clusterID + 1
cellArrayObj$clusterID[i] <- clusterID
}
}
cellCounts_forPlot_Wide <- byCellCounts_wide %>% left_join(cellArrayObj)
nullRow <- as.data.frame(t(rep(0,8)))
nullRow <- rbind(nullRow, nullRow, nullRow, nullRow)
colnames(nullRow) <- colnames(cellCounts_forPlot_Wide)
newCellCounts_forPlot_Wide <- cellCounts_forPlot_Wide[1,]
for (i in seq(2, nrow(cellCounts_forPlot_Wide))){
if (cellCounts_forPlot_Wide$clusterID[i] != cellCounts_forPlot_Wide$clusterID[i-1]){
newCellCounts_forPlot_Wide <- rbind(newCellCounts_forPlot_Wide, nullRow)
}
newCellCounts_forPlot_Wide <- rbind(newCellCounts_forPlot_Wide, cellCounts_forPlot_Wide[i,])
}
#Color Values
colorVec <- c("B6" ="deepskyblue1", "C7" = "orange", "undetec" = "grey", "3-color" = "brown")
newCellCounts_forPlot_Wide$numRow = 1:nrow(newCellCounts_forPlot_Wide)
upDownBar2 <- ggplot() +
geom_bar(data = newCellCounts_forPlot_Wide, aes(x = 1:nrow(newCellCounts_forPlot_Wide), y = -C7,
fill = "C7"), stat = "identity", position = "dodge") +
geom_bar(data = newCellCounts_forPlot_Wide, aes(x = 1:nrow(newCellCounts_forPlot_Wide), y = B6, fill = "B6"), stat = "identity") +
coord_flip() +
xlab("Individual Cells") +
ylab("RNA Count") +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("B6" ="deepskyblue1", "C7" = "orange"), name = 'Allele') +
ggtitle(expData$name)
plot(upDownBar2)
currdir <- getwd()
setwd(outSelectdir)
ggsave(plot = upDownBar2,  width = 9.89, height = 9,   filename =  paste("SUPPFigure5_COLONY_PLOT_ALL.pdf", sep = "_"))
setwd(currdir)
## Make Response to Reviewer 1 Figufres
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)
library(yaml)
library(reshape2)
source('SET_ABSOLUTE_PATH.R')
### PIXELSHIFT Response
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <- "Data_CxB_MEF_9CG_R"
pixelShift <- T
outSelectdir <- file.path(PROJHOME, 'Plots/Other')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNPs"="B6", "C7 H19 SNPs"="C7",
"H19 B6" = "B6", "H19 CAST" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
##Calculation
detecFracTable <- dataTable %>% group_by(cellID) %>% summarise(DetecFraction = (sum(labels == "B6") + sum(labels == "C7"))/n(),
TotalH19 = n(), TotalB6 = sum(labels == "B6"), TotalC7 = sum(labels == "C7")) %>%
filter(TotalB6 + TotalC7 >= 15)
detecFracTable <- detecFracTable %>% mutate(TotalUndetec = TotalH19 - TotalB6 - TotalC7)
detecFracTable <- detecFracTable %>% arrange(desc(TotalH19))
DetecTotalLine <- ggplot(data = detecFracTable) +
geom_point(aes(x = TotalB6 + TotalC7, y = TotalH19, size = 3)) +
geom_smooth(aes(x = TotalB6 + TotalC7, y = TotalH19), method=lm, se=F, formula =y~x, color="red", linetype="dashed") +
annotate("text",x = 500, y = 3000, label = textToDisplay, size = 8) +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ylab("Total H19 Transcript Counts") +
xlab("Detected H19 Transcript Counts")
plot(DetecTotalLine)
setwd(outSelectdir)
ggsave(plot = DetecTotalLine,  width = 9.89, height = 9,   filename =  paste("ForReviewerDetecShift.pdf", sep = "_"))
DetecTotalLine <- ggplot(data = detecFracTable) +
geom_point(aes(x = TotalB6 + TotalC7, y = TotalH19, size = 3)) +
geom_smooth(aes(x = TotalB6 + TotalC7, y = TotalH19), method=lm, se=F, formula =y~x, color="red", linetype="dashed") +
annotate("text",x = 500, y = 3000, label = textToDisplay, size = 8) +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ylab("Total H19 Transcript Counts") +
xlab("Detected H19 Transcript Counts")
plot(DetecTotalLine)
setwd(outSelectdir)
ggsave(plot = DetecTotalLine,  width = 9.89, height = 9,   filename =  paste("ForReviewerDetecShift.pdf", sep = "_"))
## Make Response to Reviewer 1 Figufres
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)
library(yaml)
library(reshape2)
source('SET_ABSOLUTE_PATH.R')
### PIXELSHIFT Response
datadir <- file.path(PROJHOME, 'Raw Data/')
dataSelect <- "Data_CxB_MEF_9CG_R"
pixelShift <- T
outSelectdir <- file.path(PROJHOME, 'Plots/Other')
dataSelectdir <- paste(datadir, "ExtractedCSVs/", dataSelect, sep ="")
yamldir <- paste(datadir, dataSelect, "/readMe.yaml", sep = "")
expData <- yaml.load_file(yamldir)
if (!pixelShift) {
csv <- '_MasterGuideSpotsTable.csv'
graphName <- dataSelect
}else {
csv <- '_MasterGuideSpotsTable_Shifted.csv'
graphName <- paste(dataSelect, "_Shifted", sep = "")
}
tabletoRead <- paste(datadir, "ExtractedCSVs/", expData$name, csv, sep = "")
dataTable <- tbl_df(read.csv(tabletoRead , stringsAsFactors = T))
dataTable$labels <- revalue(dataTable$labels, c("B6 H19 SNPs"="B6", "C7 H19 SNPs"="C7",
"H19 B6" = "B6", "H19 CAST" = "C7", "CAST" = "C7"))
dataTable$labels <- factor(dataTable$labels,  c("B6", "C7", "undetec", "3-color"))
##Calculation
detecFracTable <- dataTable %>% group_by(cellID) %>% summarise(DetecFraction = (sum(labels == "B6") + sum(labels == "C7"))/n(),
TotalH19 = n(), TotalB6 = sum(labels == "B6"), TotalC7 = sum(labels == "C7")) %>%
filter(TotalB6 + TotalC7 >= 15)
detecFracTable <- detecFracTable %>% mutate(TotalUndetec = TotalH19 - TotalB6 - TotalC7)
detecFracTable <- detecFracTable %>% arrange(desc(TotalH19))
DetecTotalLine <- ggplot(data = detecFracTable) +
geom_point(aes(x = TotalB6 + TotalC7, y = TotalH19, size = 3)) +
geom_smooth(aes(x = TotalB6 + TotalC7, y = TotalH19), method=lm, se=F, formula =y~x, color="red", linetype="dashed") +
theme_bw(base_size = 20, base_family = "Helvetica") +
theme(axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ylab("Total H19 Transcript Counts") +
xlab("Detected H19 Transcript Counts")
plot(DetecTotalLine)
setwd(outSelectdir)
ggsave(plot = DetecTotalLine,  width = 9.89, height = 9,   filename =  paste("ForReviewerDetecShift.pdf", sep = "_"))
