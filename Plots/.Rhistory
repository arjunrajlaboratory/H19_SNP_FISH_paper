forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data= p4, aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = upDownBar, filename =   paste(graphName,"UpDownBar.pdf", sep = "_"))
library(ggplot2)
library(dplyr)
library(plyr)
outSelectdir <- "/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Plots/"
graphName <- "5-AZA"
AZA20uM9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-AZA-9CG-20uM-AZA!!/Cell_Allelic_Expression.csv', header = TRUE)
AZA20uM9CG$Condition <- factor("5-Aza 20uM")
Control9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-aza-9CG-Control-p3MEFsfrom7-2/Cell_Allelic_Expression.csv', header = TRUE)
Control9CG$Condition <-factor("Control 9CG")
ControlOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/Control-H19-IGF2-SNP-CS-MUT/CONTROL-H19-IGF2-SNP-CS-MUT.csv', header = TRUE)
ControlOriginal$Condition = factor("Control Original")
AzaDOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/5-azad-H19-IGF2-SNP-CS-10uM-9CG/5-azad-H19-IGF2-SNP-CS-10uM-MUT.csv', header = TRUE)
AzaDOriginal$Condition = factor("5-AzaD 10 uM Original")
levels(master$Condition)
master <- rbind(ControlOriginal, Control9CG, AzaDOriginal, AZA20uM9CG)
master$H19Concentration <- master$alexa.RNACounts/master$area
master <- filter(master, AllelicExpression != 'UNDEF', AllelicExpression != 'Low H19')
master$AllelicExpression <- revalue(master$AllelicExpression, c("IGF2+" = "IGF2+ monoallelic"))
fractionCounts <- master %>%
group_by(Condition, AllelicExpression) %>%
summarize(count = n()) %>%
group_by(Condition) %>%
mutate (total = sum(count), frac = count/total)
forPlot <- filter(master, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p, filename =   paste(graphName,"Rep1.pdf", sep = "_"))
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
forPlot <- filter(fractionCounts, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p3 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, y = frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = p3, filename =   paste(graphName,"UpDownBar.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data= p4, aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
library(ggplot2)
library(dplyr)
library(plyr)
outSelectdir <- "/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Plots/"
graphName <- "5-AZA"
AZA20uM9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-AZA-9CG-20uM-AZA!!/Cell_Allelic_Expression.csv', header = TRUE)
AZA20uM9CG$Condition <- factor("5-Aza 20uM")
Control9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-aza-9CG-Control-p3MEFsfrom7-2/Cell_Allelic_Expression.csv', header = TRUE)
Control9CG$Condition <-factor("Control 9CG")
ControlOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/Control-H19-IGF2-SNP-CS-MUT/CONTROL-H19-IGF2-SNP-CS-MUT.csv', header = TRUE)
ControlOriginal$Condition = factor("Control Original")
AzaDOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/5-azad-H19-IGF2-SNP-CS-10uM-9CG/5-azad-H19-IGF2-SNP-CS-10uM-MUT.csv', header = TRUE)
AzaDOriginal$Condition = factor("5-AzaD 10 uM Original")
levels(master$Condition)
master <- rbind(ControlOriginal, Control9CG, AzaDOriginal, AZA20uM9CG)
master$H19Concentration <- master$alexa.RNACounts/master$area
master <- filter(master, AllelicExpression != 'UNDEF', AllelicExpression != 'Low H19')
master$AllelicExpression <- revalue(master$AllelicExpression, c("IGF2+" = "IGF2+ monoallelic"))
fractionCounts <- master %>%
group_by(Condition, AllelicExpression) %>%
summarize(count = n()) %>%
group_by(Condition) %>%
mutate (total = sum(count), frac = count/total)
forPlot <- filter(master, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p, filename =   paste(graphName,"Rep1.pdf", sep = "_"))
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
forPlot <- filter(fractionCounts, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p3 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, y = frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = p3, filename =   paste(graphName,"UpDownBar.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data= p4, aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = upDownBar, filename =   paste(graphName,"UpDownBar.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data= p4, aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
library(ggplot2)
library(dplyr)
library(plyr)
outSelectdir <- "/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Plots/"
graphName <- "5-AZA"
AZA20uM9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-AZA-9CG-20uM-AZA!!/Cell_Allelic_Expression.csv', header = TRUE)
AZA20uM9CG$Condition <- factor("5-Aza 20uM")
Control9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-aza-9CG-Control-p3MEFsfrom7-2/Cell_Allelic_Expression.csv', header = TRUE)
Control9CG$Condition <-factor("Control 9CG")
ControlOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/Control-H19-IGF2-SNP-CS-MUT/CONTROL-H19-IGF2-SNP-CS-MUT.csv', header = TRUE)
ControlOriginal$Condition = factor("Control Original")
AzaDOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/5-azad-H19-IGF2-SNP-CS-10uM-9CG/5-azad-H19-IGF2-SNP-CS-10uM-MUT.csv', header = TRUE)
AzaDOriginal$Condition = factor("5-AzaD 10 uM Original")
levels(master$Condition)
master <- rbind(ControlOriginal, Control9CG, AzaDOriginal, AZA20uM9CG)
master$H19Concentration <- master$alexa.RNACounts/master$area
master <- filter(master, AllelicExpression != 'UNDEF', AllelicExpression != 'Low H19')
master$AllelicExpression <- revalue(master$AllelicExpression, c("IGF2+" = "IGF2+ monoallelic"))
fractionCounts <- master %>%
group_by(Condition, AllelicExpression) %>%
summarize(count = n()) %>%
group_by(Condition) %>%
mutate (total = sum(count), frac = count/total)
forPlot <- filter(master, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p, filename =   paste(graphName,"Rep1.pdf", sep = "_"))
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
forPlot <- filter(fractionCounts, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p3 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, y = frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = p3, filename =   paste(graphName,"UpDownBar.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data = forPlot , aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = p4, filename =   paste(graphName,"UpownBar.pdf", sep = "_"))
ggplot(data=master, aes(x=Condition, y = H19Concentration, fill = AllelicExpression)) +
geom_boxplot(position = "dodge")
summary(Control9CG$AllelicExpression)
library(MASS)
CGCounts <- table(Control9CG$AllelicExpression)
AZA <- AZA20uM9CG$AllelicExpression
AZA <- AZA[AZA != 'UNDEF']
AZA <- factor(AZA)
AZA9CGFreq <- table(AZA)/sum(table(AZA))
chisq.test(CGCounts, p= AZA9CGFreq)
masterOriginal <- rbind(ControlOriginal, AzaDOriginal)
masterOriginal <- masterOriginal[masterOriginal$AllelicExpression != 'UNDEF',]
masterOriginal <- masterOriginal[masterOriginal$AllelicExpression != 'Low H19',]
ggplot(data=masterOriginal, aes(x=Condition, fill = AllelicExpression)) +
geom_bar()
summary(masterOriginal$AllelicExpression)
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
plot(p2)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
library(ggplot2)
library(dplyr)
library(plyr)
outSelectdir <- "/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Plots/"
graphName <- "5-AZA"
AZA20uM9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-AZA-9CG-20uM-AZA!!/Cell_Allelic_Expression.csv', header = TRUE)
AZA20uM9CG$Condition <- factor("5-Aza 20uM")
Control9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-aza-9CG-Control-p3MEFsfrom7-2/Cell_Allelic_Expression.csv', header = TRUE)
Control9CG$Condition <-factor("Control 9CG")
ControlOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/Control-H19-IGF2-SNP-CS-MUT/CONTROL-H19-IGF2-SNP-CS-MUT.csv', header = TRUE)
ControlOriginal$Condition = factor("Control Original")
AzaDOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/5-azad-H19-IGF2-SNP-CS-10uM-9CG/5-azad-H19-IGF2-SNP-CS-10uM-MUT.csv', header = TRUE)
AzaDOriginal$Condition = factor("5-AzaD 10 uM Original")
levels(master$Condition)
master <- rbind(ControlOriginal, Control9CG, AzaDOriginal, AZA20uM9CG)
master$H19Concentration <- master$alexa.RNACounts/master$area
master <- filter(master, AllelicExpression != 'UNDEF', AllelicExpression != 'Low H19')
master$AllelicExpression <- revalue(master$AllelicExpression, c("IGF2+" = "IGF2+ monoallelic"))
fractionCounts <- master %>%
group_by(Condition, AllelicExpression) %>%
summarize(count = n()) %>%
group_by(Condition) %>%
mutate (total = sum(count), frac = count/total)
forPlot <- filter(master, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
ggsave(plot = p, filename =   paste(graphName,"Rep1.pdf", sep = "_"))
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
plot(p2)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
forPlot <- filter(fractionCounts, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p3 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, y = frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = p3, filename =   paste(graphName,"StackRep1.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data = forPlot , aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
setwd(outSelectdir)
ggsave(plot = p4, filename =   paste(graphName,"StackRep2.pdf", sep = "_"))
ggplot(data=master, aes(x=Condition, y = H19Concentration, fill = AllelicExpression)) +
geom_boxplot(position = "dodge")
summary(Control9CG$AllelicExpression)
library(MASS)
CGCounts <- table(Control9CG$AllelicExpression)
AZA <- AZA20uM9CG$AllelicExpression
AZA <- AZA[AZA != 'UNDEF']
AZA <- factor(AZA)
AZA9CGFreq <- table(AZA)/sum(table(AZA))
chisq.test(CGCounts, p= AZA9CGFreq)
masterOriginal <- rbind(ControlOriginal, AzaDOriginal)
masterOriginal <- masterOriginal[masterOriginal$AllelicExpression != 'UNDEF',]
masterOriginal <- masterOriginal[masterOriginal$AllelicExpression != 'Low H19',]
ggplot(data=masterOriginal, aes(x=Condition, fill = AllelicExpression)) +
geom_bar()
summary(masterOriginal$AllelicExpression)
getwd()
library(ggplot2)
library(dplyr)
library(plyr)
outSelectdir <- "/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Plots/"
graphName <- "5-AZA"
AZA20uM9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-AZA-9CG-20uM-AZA!!/Cell_Allelic_Expression.csv', header = TRUE)
AZA20uM9CG$Condition <- factor("5-Aza 20uM")
Control9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-aza-9CG-Control-p3MEFsfrom7-2/Cell_Allelic_Expression.csv', header = TRUE)
Control9CG$Condition <-factor("Control 9CG")
ControlOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/Control-H19-IGF2-SNP-CS-MUT/CONTROL-H19-IGF2-SNP-CS-MUT.csv', header = TRUE)
ControlOriginal$Condition = factor("Control Original")
AzaDOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/5-azad-H19-IGF2-SNP-CS-10uM-9CG/5-azad-H19-IGF2-SNP-CS-10uM-MUT.csv', header = TRUE)
AzaDOriginal$Condition = factor("5-AzaD 10 uM Original")
levels(master$Condition)
master <- rbind(ControlOriginal, Control9CG, AzaDOriginal, AZA20uM9CG)
master$H19Concentration <- master$alexa.RNACounts/master$area
master <- filter(master, AllelicExpression != 'UNDEF', AllelicExpression != 'Low H19')
master$AllelicExpression <- revalue(master$AllelicExpression, c("IGF2+" = "IGF2+ monoallelic"))
fractionCounts <- master %>%
group_by(Condition, AllelicExpression) %>%
summarize(count = n()) %>%
group_by(Condition) %>%
mutate (total = sum(count), frac = count/total)
forPlot <- filter(master, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
plot(p)
ggsave(plot = p, filename =   paste(graphName,"Rep1.pdf", sep = "_"))
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
plot(p2)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
forPlot <- filter(fractionCounts, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p3 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, y = frac, fill = AllelicExpression), position = "dodge", stat = "identity")
plot(p3)
setwd(outSelectdir)
ggsave(plot = p3, filename =   paste(graphName,"StackRep1.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data = forPlot , aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
plot(p4)
setwd(outSelectdir)
ggsave(plot = p4, filename =   paste(graphName,"StackRep2.pdf", sep = "_"))
library(ggplot2)
library(dplyr)
library(plyr)
outSelectdir <- "/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Plots/"
graphName <- "5-AZA"
AZA20uM9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-AZA-9CG-20uM-AZA!!/Cell_Allelic_Expression.csv', header = TRUE)
AZA20uM9CG$Condition <- factor("5-Aza 20uM")
Control9CG <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-07-16/5-aza-9CG-Control-p3MEFsfrom7-2/Cell_Allelic_Expression.csv', header = TRUE)
Control9CG$Condition <-factor("Control 9CG")
ControlOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/Control-H19-IGF2-SNP-CS-MUT/CONTROL-H19-IGF2-SNP-CS-MUT.csv', header = TRUE)
ControlOriginal$Condition = factor("Control Original")
AzaDOriginal <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/5-AZA/2015-03-01- 5AZA/5-azad-H19-IGF2-SNP-CS-10uM-9CG/Cell_Allelic_Expression.csv', header = TRUE)
AzaDOriginal$Condition = factor("5-AzaD 10 uM Original")
levels(master$Condition)
master <- rbind(ControlOriginal, Control9CG, AzaDOriginal, AZA20uM9CG)
master$H19Concentration <- master$alexa.RNACounts/master$area
master <- filter(master, AllelicExpression != 'UNDEF', AllelicExpression != 'Low H19')
master$AllelicExpression <- revalue(master$AllelicExpression, c("IGF2+" = "IGF2+ monoallelic"))
fractionCounts <- master %>%
group_by(Condition, AllelicExpression) %>%
summarize(count = n()) %>%
group_by(Condition) %>%
mutate (total = sum(count), frac = count/total)
forPlot <- filter(master, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
plot(p)
fractionCounts
forPlot <- filter(master, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p2 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, fill = AllelicExpression), position = "dodge")
setwd(outSelectdir)
plot(p2)
ggsave(plot = p2, filename =   paste(graphName,"Rep2.pdf", sep = "_"))
forPlot <- filter(fractionCounts, Condition %in%  c("5-AzaD 10 uM Original", "Control Original"))
p3 <- ggplot() +
geom_bar(data= forPlot, aes(x=Condition, y = frac, fill = AllelicExpression), position = "dodge", stat = "identity")
plot(p3)
setwd(outSelectdir)
ggsave(plot = p3, filename =   paste(graphName,"StackRep1.pdf", sep = "_"))
forPlot <- filter(fractionCounts, !(Condition %in%  c("5-AzaD 10 uM Original", "Control Original")))
p4 <- ggplot() +
geom_bar(data = forPlot , aes(x = Condition, y =frac, fill = AllelicExpression), position = "dodge", stat = "identity")
plot(p4)
setwd(outSelectdir)
ggsave(plot = p4, filename =   paste(graphName,"StackRep2.pdf", sep = "_"))
library(plyr)
library(dplyr)
library(ggplot2)
Colony1_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-4x-2-1-Biallelic-4-08-2015.csv', header = TRUE)
Colony2_IGF2 <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/IGF2+_7-6_4x_08-11-2015.csv', header = TRUE)
Colony3_LowH19 <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Rep3-4x-3R-Well5-LowH19-5-17-2015.csv', header = TRUE)
Colony4_IGF2 <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Rep3-4x-3R-Well6-Monoallelic_IGF2+_Bi-ish-H19-5-17-2015.csv'
, header = TRUE)
Colony5_Mono <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Rep3-4x-4R-Well2-Monoallelic_NOIGF-H19-5-17-2015.csv', header = TRUE)
Colony6_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Rep3-4x-4R-Well3-Biallelic-H19-5-17-2015.csv', header = TRUE)
Colony7_Mono <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Rep3-4x-4R-Well4-Mono_NOIGF2_REAL-H19-5-17-2015.csv', header = TRUE)
Colony8_Mono <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Slide4-Well4-Monoallelic-3-22-2015.csv', header = TRUE)
Colony9_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony-Well6-1-10-Bi-3-10-2015.csv', header = TRUE)
Colony10_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony1-1-Well2-3-12-Bi.csv', header = TRUE)
Colony11_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony_Slide1_Well5_BI_3-10_1x.csv', header = TRUE)
Colony12_IGF2 <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony_Slide3_Well2_Mono_IGF2_3-18_1x.csv', header = TRUE)
Colony13_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony_Slide6_Well1_BIH19_3-25.csv', header = TRUE)
Colony14_LowH19 <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Colony_Slide3_Well7_LOWH19_3-18_1x.csv', header = TRUE)
Colony15_Bi <- read.csv('/Users/paulginart/Dropbox/H19 SNP-FISH Paper/Raw Data/Clone Bisulfite/All_Colony_Files/Bi_1x_1-3_06-04-2015.csv', header = TRUE)
names <- c('Colony1_Bi', 'Colony2_IGF2', 'Colony3_LowH19', 'Colony4_IGF2', 'Colony5_Mono', 'Colony6_Bi', 'Colony7_Mono', 'Colony8_Mono', 'Colony9_Bi', 'Colony10_Bi',
'Colony11_Bi', 'Colony12_IGF2', 'Colony13_Bi', 'Colony14_LowH19', 'Colony15_Bi')
for (colony in names){
temp <- get(colony)
properties <- strsplit(colony, '_')
temp$ColonyID = as.factor(properties[[1]][1])
temp$Type = as.factor(properties[[1]][2])
assign(colony, temp)
}
plz <- llply(names, get)
master <- ldply(plz, rbind)
master$isGood <- as.logical(master$isGood)
master_good <- master[master$isGood,]
master_good$Conc <- master_good$alexa.RNACounts/master_good$area
master_good$objArrayNum <- NULL
master_good$objNum <- NULL
p <- ggplot() +
geom_violin(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "ydensity", color = Type))
plot(p)
master_good <- arrange(master_good, Type, ColonyID)
master_good <- master_good %>% mutate(area = area*(0.125)^2)
#Individual Colonies
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = area), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = area, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = area), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = area, stat = "identity", position = "jitter", color = Type))
plot(p)
geom_boxplot(data = master_good, aes(x = Type, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = area), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = area, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0, position = "dodge") +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0, notch = T) +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0, group = Type) +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0, group = Type)
# geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, group = Type), outlier.size = 0)
# geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, group = Type), outlier.size = 0) +
+ geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0) +
+ geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = area), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = area, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, fill = ColonyID), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type)) +
scale_fill_continuous(values = 'white')
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, fill = ColonyID), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, fill = ColonyID), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type)) +
scale_fill_discrete(values = 'white')
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, fill = ColonyID), outlier.size = 0, fill = 'white') +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, group = ColonyID), outlier.size = 0, position = position_dodge() +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, group = ColonyID), outlier.size = 0, position = position_dodge()) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0) +
+ geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = area), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = area, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, color = Type), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = alexa.RNACounts), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = Type, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = ColonyID, y = Conc), outlier.size = 0) +
geom_jitter(data = master_good, aes(x = ColonyID, y = Conc, stat = "identity", position = "jitter", color = Type))
plot(p)
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, group = ColonyID), outlier.size = 0, position = position_dodge()) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
#Grouped
p <- ggplot() +
geom_boxplot(data = master_good, aes(x = Type, y = alexa.RNACounts, group = ColonyID), outlier.size = 0, position = position_dodge()) +
geom_jitter(data = master_good, aes(x = Type, y = alexa.RNACounts, stat = "identity", position = "jitter", color = Type))
plot(p)
